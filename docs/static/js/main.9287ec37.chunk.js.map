{"version":3,"sources":["mocks/categories.js","gateways/CategoryApi.js","actions/categories.js","reducers/categories.js","mocks/products.js","gateways/ProductApi.js","actions/products.js","reducers/index.js","reducers/products.js","components/Main/Main.js","components/Header/Header.js","components/Products/Product.js","components/Products/ProductsList.js","components/Products/ProductsContainer.js","components/Forms/ProductForm.js","components/Forms/ProductFormContainer.js","components/NotFound/NotFound.js","routes.js","index.js"],"names":["categories","id","name","categoryApi","getCategories","RECEIVE_CATEGORIES","fetchCategories","dispatch","type","json","map","category","receiveCategories","getCategoriesById","state","reduce","acc","Object","objectSpread","defineProperty","products","rating","featured","itemsInStock","receiptDate","brand","expirationDate","createdAt","productApi","getProducts","RECEIVE_PRODUCTS","ADD_PRODUCT","DELETE_PRODUCT","UPDATE_PRODUCT","fetchProducts","product","receiveProducts","combineReducers","arguments","length","undefined","action","categoriesActions","toConsumableArray","productsActions","concat","productIndex","findIndex","slice","index","Main","_ref","children","react_default","a","createElement","Header","react","className","Product","deleteProduct","moment","format","Card","CardBody","CardTitle","CardText","tag","ListGroup","ListGroupItem","key","Row","Col","sm","size","order","offset","Button","onClick","react_router_dom","to","pathname","productForUpdate","ProductList","productsGroups","chunk","Container","productsGroup","Products_Product","ProductsContainer","this","props","_this$props","components_Header_Header","xs","ProductsList","Component","connect","categoriesById","ProductForm","addProduct","newId","updateProduct","_useState","useState","_useState2","slicedToArray","setName","_useState3","_useState4","setBrand","_useState5","_useState6","setRating","_useState7","_useState8","setItemsInStock","_useState9","_useState10","setReceiptDate","_useState11","obj","_useState12","setCategories","_useState13","_useState14","setExpirationDate","validate","selectedDate","now","diff","Form","form","md","FormGroup","Label","for","Input","invalid","value","onChange","e","target","FormFeedback","num","placeholder","options","newCategories","i","selected","push","parseInt","multiple","keys","categoryName","categoryId","disabled","some","field","ProductFormContainer","location","Forms_ProductForm","NotFound","getRoutes","components_Main_Main","react_router","exact","path","component","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","document","getElementById"],"mappings":"8PA+CeA,EA/CI,CACjB,CACEC,GAAI,EACJC,KAAM,oBAER,CACED,GAAI,EACJC,KAAM,WAER,CACED,GAAI,EACJC,KAAM,WAER,CACED,GAAI,EACJC,KAAM,cAER,CACED,GAAI,EACJC,KAAM,UAER,CACED,GAAI,EACJC,KAAM,YAER,CACED,GAAI,EACJC,KAAM,YAER,CACED,GAAI,EACJC,KAAM,YAER,CACED,GAAI,EACJC,KAAM,YAER,CACED,GAAI,GACJC,KAAM,kBAER,CACED,GAAI,GACJC,KAAM,iBCnCGC,EAAc,0CALzBC,cAAgB,WACd,OAAOJ,ICDEK,EAAqB,qBAWrBC,EAAkB,kBAAM,SAAAC,GACnCA,EAV+B,CAC/BC,KAJgC,uBAehCD,EARwB,SAACE,GAAD,MAAW,CACnCD,KAAMH,EACNL,WAAYS,EAAKC,IAAI,SAAAC,GAAQ,OAAIA,KAMxBC,CADIT,EAAYC,oBCHpB,SAASS,EAAkBC,GAChC,OAAOA,EAAMd,WAAWe,OAAO,SAACC,EAAKL,GACnC,OAAOM,OAAAC,EAAA,EAAAD,CAAA,GACFD,EADLC,OAAAE,EAAA,EAAAF,CAAA,GAEGN,EAASV,GAAKU,KAEhB,ICnBL,IAuCeS,EAvCA,CACb,CACEnB,GAAI,EACJC,KAAM,KACNmB,OAAQ,EACRC,UAAU,EACVC,aAAc,EACdC,YAAa,KACbC,MAAO,MACPzB,WAAY,CAAC,EAAG,EAAG,GACnB0B,eAAgB,KAChBC,UAAW,6BAEb,CACE1B,GAAI,EACJC,KAAM,SACNmB,OAAQ,EACRC,UAAU,EACVC,aAAc,EACdC,YAAa,aACbC,MAAO,QACPzB,WAAY,CAAC,EAAG,EAAG,GACnB0B,eAAgB,aAChBC,UAAW,6BAEb,CACE1B,GAAI,EACJC,KAAM,SACNmB,OAAQ,EACRC,UAAU,EACVC,aAAc,GACdC,YAAa,KACbC,MAAO,KACPzB,WAAY,CAAC,GACb0B,eAAgB,KAChBC,UAAW,8BC3BFC,EAAa,0CALxBC,YAAc,WACZ,OAAOT,ICDEU,EAAmB,mBACnBC,EAAc,cACdC,EAAiB,iBACjBC,EAAiB,iBAWjBC,EAAgB,kBAAM,SAAA3B,GACjCA,EAV6B,CAC7BC,KAP8B,qBAkB9BD,EARsB,SAACE,GAAD,MAAW,CACjCD,KAAMsB,EACNV,SAAUX,EAAKC,IAAI,SAAAyB,GAAO,OAAIA,KAMrBC,CADIR,EAAWC,kBCfXQ,gCAAgB,CAC7BrC,WJHK,WAAwC,IAApBc,EAAoBwB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQC,EAAOjC,MACb,KAAKkC,EACH,OAAOzB,OAAA0B,EAAA,EAAA1B,CACFwB,EAAOzC,YAEd,QACE,OAAOc,IIHXM,SCJK,WAAsC,IAApBN,EAAoBwB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOjC,MACb,KAAKoC,EACH,OAAqB,IAAjB9B,EAAMyB,OACDtB,OAAA0B,EAAA,EAAA1B,CACFwB,EAAOrB,UAELN,EACX,KAAK8B,EACH,SAAAC,OAAA5B,OAAA0B,EAAA,EAAA1B,CACKH,GADL,CAEE2B,EAAON,UAEX,KAAKS,EACH,IAAME,EAAehC,EAAMiC,UAAU,SAAAZ,GAAO,OAAIA,EAAQlC,KAAOwC,EAAOxC,KACtE,SAAA4C,OAAA5B,OAAA0B,EAAA,EAAA1B,CACKH,EAAMkC,MAAM,EAAGF,IADpB7B,OAAA0B,EAAA,EAAA1B,CAEKH,EAAMkC,MAAMF,EAAe,KAElC,KAAKF,EACH,IAAMK,EAAQnC,EAAMiC,UAAU,SAAAZ,GAAO,OAAIA,EAAQlC,KAAOwC,EAAON,QAAQlC,KACvE,SAAA4C,OAAA5B,OAAA0B,EAAA,EAAA1B,CACKH,EAAMkC,MAAM,EAAGC,IADpB,CAEER,EAAON,SAFTlB,OAAA0B,EAAA,EAAA1B,CAGKH,EAAMkC,MAAMC,EAAQ,KAE3B,QACE,OAAOnC,sBCpBEoC,EANF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAAmBC,EAAAC,EAAAC,cAAA,WAAMH,oCCWvBI,EAXA,SAAAL,GAAA,IAAGjD,EAAHiD,EAAGjD,KAAH,OACbmD,EAAAC,EAAAC,cAACE,EAAA,SAAD,KACEJ,EAAAC,EAAAC,cAAA,MAAIG,UAAU,MAAMxD,GACpBmD,EAAAC,EAAAC,cAAA,qGC4DWI,EAzDC,SAAAR,GAAgC,IAA7BhB,EAA6BgB,EAA7BhB,QAASyB,EAAoBT,EAApBS,cACpBpC,EAAcW,EAAQX,YAAcqC,IAAO1B,EAAQX,aAAasC,OAJhD,cAI0E,IAC1FpC,EAAiBS,EAAQT,eAAiBmC,IAAO1B,EAAQT,gBAAgBoC,OALzD,cAKmF,IACnGnC,EAAYQ,EAAQR,UAAYkC,IAAO1B,EAAQR,WAAWmC,OAL3C,sBAKoE,IAEzF,OACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACU,EAAA,EAAD,KAAY9B,EAAQjC,MACpBmD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUC,IAAI,OACZd,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,eAAuBlC,EAAQV,OAC/B4B,EAAAC,EAAAC,cAACc,EAAA,EAAD,gBAAwBlC,EAAQd,QAChCgC,EAAAC,EAAAC,cAACc,EAAA,EAAD,kBAA0BlC,EAAQb,SAAW,MAAQ,MACrD+B,EAAAC,EAAAC,cAACc,EAAA,EAAD,wBAAgClC,EAAQZ,cACxC8B,EAAAC,EAAAC,cAACc,EAAA,EAAD,mBAEEhB,EAAAC,EAAAC,cAAA,UACGpB,EAAQnC,WAAWU,IAAI,SAAAC,GAAQ,OAC9B0C,EAAAC,EAAAC,cAAA,MAAIe,IAAK3D,EAASV,IAAKU,EAAST,UAItCmD,EAAAC,EAAAC,cAACc,EAAA,EAAD,sBAA8B7C,GAC9B6B,EAAAC,EAAAC,cAACc,EAAA,EAAD,yBAAiC3C,GACjC2B,EAAAC,EAAAC,cAACc,EAAA,EAAD,oBAA4B1C,KAGhC0B,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAIC,MAAO,EAAGC,OAAQ,IACrCvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQC,QAAS,WAAQlB,EAAczB,EAAQlC,MAA/C,WAIFoD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAIC,MAAO,EAAGC,OAAQ,IACrCvB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAI,CACRC,SAAU,UACVnE,MAAO,CACLoE,iBAAkB/C,KAGpBkB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,qCClBCM,EA1BK,SAAAhC,GAAiC,IAA9B/B,EAA8B+B,EAA9B/B,SAAUwC,EAAoBT,EAApBS,cACzBwB,EAAiBC,gBAAMjE,EAAU,GAEvC,OACEiC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACGF,EAAe1E,IAAI,SAAC6E,EAAetC,GAAhB,OAClBI,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAKD,IAAKrB,EAAOS,UAAU,QACxB6B,EAAc7E,IAAI,SAAAyB,GAAO,OACxBkB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKC,GAAG,IAAIH,IAAKnC,EAAQlC,IACvBoD,EAAAC,EAAAC,cAACiC,EAAD,CACErD,QAASA,EACTyB,cAAeA,YCNzB6B,8LACgB,IACVlF,EAAamF,KAAKC,MAAlBpF,SAERA,EAASD,KACTC,EAAS2B,sCAGF,IAAA0D,EACwBF,KAAKC,MAA5BvE,EADDwE,EACCxE,SAAUb,EADXqF,EACWrF,SAElB,OACE8C,EAAAC,EAAAC,cAACE,EAAA,SAAD,KACEJ,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACsC,EAAD,CAAQ3F,KAAK,cAEfmD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKsB,GAAG,QACNzC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAG,WAAU3B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,2BAIzBxB,EAAAC,EAAAC,cAACwC,EAAD,CACE3E,SAAUA,EACVwC,cAAe,SAAC3D,GAAD,OAAQM,EPRJ,SAACN,GAAD,MAAS,CACpCO,KAAMwB,EACN/B,GAAIA,GOMoC2D,CAAc3D,eAzBxB+F,aAsDjBC,cAjBS,SAACnF,GACvB,IAAMoF,EAAiBrF,EAAkBC,GAWzC,MAAO,CACLM,SAVeN,EAAMM,SAASV,IAAI,SAAAyB,GAClC,IAAMnC,EAAamC,EAAQnC,WAAWU,IAAI,SAAAT,GAAE,OAAIiG,EAAejG,KAE/D,OAAOgB,OAAAC,EAAA,EAAAD,CAAA,GACFkB,EADL,CAEEnC,mBASSiG,CAAyBR,wDC8JzBU,GAxNK,SAAAhD,GAA4E,IAAzEiD,EAAyEjD,EAAzEiD,WAAYC,EAA6DlD,EAA7DkD,MAAOH,EAAsD/C,EAAtD+C,eAAgBI,EAAsCnD,EAAtCmD,cAAepB,EAAuB/B,EAAvB+B,iBAAuBqB,EACpEC,mBAAStB,EAAmBA,EAAiBhF,KAAO,IADgBuG,EAAAxF,OAAAyF,EAAA,EAAAzF,CAAAsF,EAAA,GACrFrG,EADqFuG,EAAA,GAC/EE,EAD+EF,EAAA,GAAAG,EAElEJ,mBAAStB,EAAmBA,EAAiBzD,MAAQ,IAFaoF,EAAA5F,OAAAyF,EAAA,EAAAzF,CAAA2F,EAAA,GAErFnF,EAFqFoF,EAAA,GAE9EC,EAF8ED,EAAA,GAAAE,EAGhEP,mBAAStB,EAAmBA,EAAiB7D,OAAS,IAHU2F,EAAA/F,OAAAyF,EAAA,EAAAzF,CAAA8F,EAAA,GAGrF1F,EAHqF2F,EAAA,GAG7EC,EAH6ED,EAAA,GAAAE,EAIpDV,mBAAStB,EAAmBA,EAAiB3D,aAAe,GAJR4F,EAAAlG,OAAAyF,EAAA,EAAAzF,CAAAiG,EAAA,GAIrF3F,EAJqF4F,EAAA,GAIvEC,EAJuED,EAAA,GAAAE,EAKtDb,mBAClCtB,GAAoBA,EAAiB1D,YACjC0D,EAAiB1D,YAAc,IAPqD8F,EAAArG,OAAAyF,EAAA,EAAAzF,CAAAoG,EAAA,GAKrF7F,EALqF8F,EAAA,GAKxEC,EALwED,EAAA,GAAAE,EAQxDhB,mBAAStB,EAAmBA,EAAiBlF,WAAWU,IAAI,SAAA+G,GAAG,OAAIA,EAAIxH,KAAM,IARrByH,EAAAzG,OAAAyF,EAAA,EAAAzF,CAAAuG,EAAA,GAQrFxH,EARqF0H,EAAA,GAQzEC,EARyED,EAAA,GAAAE,EAShDpB,mBACxCtB,GAAoBA,EAAiBxD,eACjCwD,EAAiBxD,eAAiB,IAXkDmG,EAAA5G,OAAAyF,EAAA,EAAAzF,CAAA2G,EAAA,GASrFlG,EATqFmG,EAAA,GASrEC,EATqED,EAAA,GAatFE,EAAW,CACb7H,KAAM,kBAAMA,EAAKqC,OAAS,GAAKrC,EAAKqC,OAAS,KAC7Cb,eAAgB,WACZ,GAAIA,EAAgB,CAChB,IAAMsG,EAAenE,IAAOnC,GACtBuG,EAAMpE,MACZ,OAAImE,EAAaE,KAAKD,EAAK,QAAU,GAGrC,OAAO,GAGfjI,WAAY,kBAAMA,EAAWuC,QAAU,GAAKvC,EAAWuC,QAAU,IAGrE,OACIc,EAAAC,EAAAC,cAAC4E,GAAA,EAAD,KACI9E,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAK6D,MAAI,GACL/E,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAK6D,GAAI,GACLhF,EAAAC,EAAAC,cAAC+E,GAAA,EAAD,KACIjF,EAAAC,EAAAC,cAACgF,GAAA,EAAD,CAAOC,IAAI,eAAX,gBACAnF,EAAAC,EAAAC,cAACkF,GAAA,EAAD,CACIC,SAAUX,EAAS7H,OACnBM,KAAK,OACLN,KAAK,OACLD,GAAG,cACH0I,MAAOzI,EACP0I,SAAU,SAACC,GAAD,OAAOlC,EAAQkC,EAAEC,OAAOH,UAEtCtF,EAAAC,EAAAC,cAACwF,GAAA,EAAD,wDAGR1F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAK6D,GAAI,GACLhF,EAAAC,EAAAC,cAAC+E,GAAA,EAAD,KACIjF,EAAAC,EAAAC,cAACgF,GAAA,EAAD,CAAOC,IAAI,aAAX,SACAnF,EAAAC,EAAAC,cAACkF,GAAA,EAAD,CACIjI,KAAK,OACLN,KAAK,QACLD,GAAG,aACH0I,MAAOlH,EACPmH,SAAU,SAACC,GAAD,OAAO/B,EAAS+B,EAAEC,OAAOH,aAKnDtF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACIlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAK6D,GAAI,GACLhF,EAAAC,EAAAC,cAAC+E,GAAA,EAAD,KACIjF,EAAAC,EAAAC,cAACgF,GAAA,EAAD,CAAOC,IAAI,iBAAX,UACAnF,EAAAC,EAAAC,cAACkF,GAAA,EAAD,CACIE,MAAOtH,EACPuH,SAAU,SAACC,GAAD,OAAO5B,EAAU4B,EAAEC,OAAOH,QACpCnI,KAAK,SACLN,KAAK,SACLD,GAAG,iBAEF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIS,IAC7B,SAACsI,GAAD,OAAS3F,EAAAC,EAAAC,cAAA,UAAQe,IAAK0E,GAAMA,MAGpC3F,EAAAC,EAAAC,cAACwF,GAAA,EAAD,6BAGR1F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAK6D,GAAI,GACLhF,EAAAC,EAAAC,cAAC+E,GAAA,EAAD,KACIjF,EAAAC,EAAAC,cAACgF,GAAA,EAAD,CAAOC,IAAI,gBAAX,kBACAnF,EAAAC,EAAAC,cAACkF,GAAA,EAAD,CACIE,MAAOpH,EACPqH,SAAU,SAACC,GAAD,OAAOzB,EAAgByB,EAAEC,OAAOH,QAC1CnI,KAAK,SACLN,KAAK,eACLD,GAAG,eACHgJ,YAAY,aAIxB5F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAK6D,GAAI,GACLhF,EAAAC,EAAAC,cAAC+E,GAAA,EAAD,KACIjF,EAAAC,EAAAC,cAACgF,GAAA,EAAD,CAAOC,IAAI,qBAAX,cACAnF,EAAAC,EAAAC,cAACkF,GAAA,EAAD,CACIC,SAAUX,EAAS/H,aACnB2I,MAAO3I,EAAWU,IAAI,SAACT,EAAIgD,GAAL,OAAeiD,EAAejG,GAAIC,OACxD0I,SAAU,SAACC,GACP,IAAIK,EAAUL,EAAEC,OAAOI,QACnBC,EAAgB,GACpB,IAAK,IAAIC,KAAKF,EACNA,EAAQE,GAAGC,UACXF,EAAcG,KAAKC,SAASL,EAAQE,GAAGnJ,KAG/C0H,EAAcwB,IAElB3I,KAAK,SACLN,KAAK,cACLD,GAAG,oBACHuJ,UAAQ,GAEPvI,OAAOwI,KAAKvD,GAAgBxF,IAAI,SAAC4D,GAC9B,IAAMoF,EAAexD,EAAe5B,GAAKpE,KACnCyJ,EAAazD,EAAe5B,GAAKrE,GACvC,OAAOoD,EAAAC,EAAAC,cAAA,UACHtD,GAAI0J,EACJrF,IAAK4B,EAAe5B,GAAKrE,IAC3ByJ,MAGVrG,EAAAC,EAAAC,cAACwF,GAAA,EAAD,sDAIZ1F,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACIlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAK6D,GAAI,GACLhF,EAAAC,EAAAC,cAAC+E,GAAA,EAAD,KACIjF,EAAAC,EAAAC,cAACgF,GAAA,EAAD,CAAOC,IAAI,kBAAX,mBACAnF,EAAAC,EAAAC,cAACkF,GAAA,EAAD,CACIC,SAAUX,EAASrG,iBACnBiH,MAAOjH,EACPlB,KAAK,OACLN,KAAK,OACLD,GAAG,iBACHgJ,YAAY,mBACZL,SAAU,SAACC,GAAD,OAAOf,EAAkBe,EAAEC,OAAOH,UAEhDtF,EAAAC,EAAAC,cAACwF,GAAA,EAAD,gEAGR1F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAK6D,GAAI,GACLhF,EAAAC,EAAAC,cAAC+E,GAAA,EAAD,KACIjF,EAAAC,EAAAC,cAACgF,GAAA,EAAD,CAAOC,IAAI,eAAX,oBACAnF,EAAAC,EAAAC,cAACkF,GAAA,EAAD,CACIE,MAAOnH,EACPhB,KAAK,OACLN,KAAK,OACLD,GAAG,cACHgJ,YAAY,mBACZL,SAAU,SAACC,GAAD,OAAOtB,EAAesB,EAAEC,OAAOH,aAKzDtF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAG,KACJE,EACG7B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACI+E,SAAU3I,OAAOwI,KAAK1B,GAAU8B,KAAK,SAAAC,GAAK,OAAK/B,EAAS+B,OACxDhF,QAAS,SAAC+D,GACNvC,EACI,CACIrG,GAAIiF,EAAiBjF,GACrBC,OACAmB,SACAC,SAAiBD,EAAS,EAC1BE,eACAC,YAAoBA,EAChBqC,IAAOrC,GAAasC,OAAO,cAAgB,KAC/CrC,QACAzB,aACA0B,eAAuBA,EACnBmC,IAAOnC,GAAgBoC,OAAO,cAAgB,KAClDnC,UAAWuD,EAAiBvD,cAhB5C,kBAwBA0B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACI+E,SAAU3I,OAAOwI,KAAK1B,GAAU8B,KAAK,SAAAC,GAAK,OAAK/B,EAAS+B,OACxDhF,QAAS,SAAC+D,GACNzC,EACI,CACInG,GAAIoG,EACJnG,OACAmB,SACAC,SAAiBD,EAAS,EAC1BE,eACAC,YAAoBA,EAChBqC,IAAOrC,GAAasC,OAAO,cAAgB,KAC/CrC,QACAzB,aACA0B,eAAuBA,EACnBmC,IAAOnC,GAAgBoC,OAAO,cAAgB,KAClDnC,UAAWkC,MAASC,aAhBpC,kBC/KdiG,oLAEK,IAAAnE,EACyDF,KAAKC,MAA7DvE,EADDwE,EACCxE,SAAU8E,EADXN,EACWM,eAAgBE,EAD3BR,EAC2BQ,WAAYE,EADvCV,EACuCU,cAC1CpB,EAAmB,KAMvB,OALIQ,KAAKC,MAAMqE,UACbtE,KAAKC,MAAMqE,SAASlJ,OACpB4E,KAAKC,MAAMqE,SAASlJ,MAAMoE,mBACxBA,EAAmBQ,KAAKC,MAAMqE,SAASlJ,MAAMoE,kBAG/C7B,EAAAC,EAAAC,cAACE,EAAA,SAAD,KACEJ,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACGU,EAAmB7B,EAAAC,EAAAC,cAACsC,EAAD,CAAQ3F,KAAK,mBAAsBmD,EAAAC,EAAAC,cAACsC,EAAD,CAAQ3F,KAAK,iBAEtEmD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKsB,GAAG,QACNzC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAG,KAAI3B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,6BAIlBK,EACC7B,EAAAC,EAAAC,cAAC0G,GAAD,CAAa/D,eAAgBA,EAAgBI,cAAeA,EAAepB,iBAAkBA,IAC7F7B,EAAAC,EAAAC,cAAC0G,GAAD,CAAa/D,eAAgBA,EAAgBE,WAAYA,EAAYC,MAAOjF,EAASA,EAASmB,OAAS,GAAGtC,GAAK,YAxBtF+F,aAwDpBC,eAVS,SAACnF,GAIvB,MAAO,CACLM,SAJeN,EAAMM,SAKrB8E,eAJqBrF,EAAkBC,KAThB,SAAAP,GACzB,MAAO,CACL6F,WAAY,SAACqB,GAAD,OAASlH,ET7BC,SAACkH,GAAD,MAAU,CAClCjH,KAAMuB,EACNI,QAASsF,GS2BuBrB,CAAWqB,KACzCnB,cAAe,SAACmB,GAAD,OAASlH,ETpBC,SAACkH,GAAD,MAAU,CACrCjH,KAAMyB,EACNE,QAASsF,GSkB0BnB,CAAcmB,OAcpCxB,CAA6C8D,IC/D7CG,GAFE,kBAAO7G,EAAAC,EAAAC,cAAA,wBCyBT4G,OApBR,WACL,OACE9G,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACE1B,EAAAC,EAAAC,cAAC6G,EAAD,KACE/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,KAMEhH,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWT,KANzC,IAOE1G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWT,KAPzC,IAQE1G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/E,IARnC,IASEpC,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOE,KAAK,IAAIC,UAAWN,KAT7B,QCAFO,gBAAQC,sBAAYC,EAAUC,8BAAoBC,0BAAgBC,QAExEC,IAASC,OACP3H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAUR,MAAOA,IACdN,QAIPe,SAASC,eAAe","file":"static/js/main.9287ec37.chunk.js","sourcesContent":["const categories = [\r\n  {\r\n    id: 1,\r\n    name: 'TV & Home Cinema',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Laptops',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Watches',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Headphones',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Phones',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Desktops',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Monitors',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Printers',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Monitors',\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Camera & Photo',\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'Audio & HiFi',\r\n  },\r\n];\r\n\r\nexport default categories;\r\n","import categories from '../mocks/categories';\r\n\r\nclass CategoryApi {\r\n  getCategories = () => {\r\n    return categories;\r\n  }\r\n}\r\n\r\nexport const categoryApi = new CategoryApi();\r\n","import { categoryApi } from '../gateways/CategoryApi';\r\n\r\nexport const REQUEST_CATEGORIES = 'REQUEST_CATEGORIES';\r\nexport const RECEIVE_CATEGORIES = 'RECEIVE_CATEGORIES';\r\n\r\nconst requestCategories = () => ({\r\n  type: REQUEST_CATEGORIES,\r\n});\r\n\r\nconst receiveCategories = (json) => ({\r\n  type: RECEIVE_CATEGORIES,\r\n  categories: json.map(category => category),\r\n});\r\n\r\nexport const fetchCategories = () => dispatch => {\r\n  dispatch(requestCategories());\r\n  const json = categoryApi.getCategories();\r\n  dispatch(receiveCategories(json));\r\n};\r\n","import * as categoriesActions from '../actions/categories';\r\n\r\nexport function categories(state = [], action) {\r\n  switch (action.type) {\r\n    case categoriesActions.RECEIVE_CATEGORIES:\r\n      return [\r\n        ...action.categories,\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function getCategoriesById(state) {\r\n  return state.categories.reduce((acc, category) => {\r\n    return {\r\n      ...acc,\r\n      [category.id]: category\r\n    }\r\n  }, {})\r\n}\r\n","let products = [\r\n  {\r\n    id: 1,\r\n    name: 'TV',\r\n    rating: 9,\r\n    featured: true,\r\n    itemsInStock: 2,\r\n    receiptDate: null,\r\n    brand: 'JVC',\r\n    categories: [1, 2, 9],\r\n    expirationDate: null,\r\n    createdAt: '2019-04-30T16:00:40+03:00',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'iPhone',\r\n    rating: 2,\r\n    featured: false,\r\n    itemsInStock: 0,\r\n    receiptDate: '2019-06-14',\r\n    brand: 'Apple',\r\n    categories: [5, 4, 3],\r\n    expirationDate: '2019-05-20',\r\n    createdAt: '2019-05-14T16:00:40+03:00',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'laptop',\r\n    rating: 5,\r\n    featured: false,\r\n    itemsInStock: 10,\r\n    receiptDate: null,\r\n    brand: 'HP',\r\n    categories: [2],\r\n    expirationDate: null,\r\n    createdAt: '2019-05-20T16:00:40+03:00',\r\n  },\r\n];\r\n\r\nexport default products;\r\n","import products from '../mocks/products';\r\n\r\nclass ProductApi {\r\n  getProducts = () => {\r\n    return products;\r\n  }\r\n}\r\n\r\nexport const productApi = new ProductApi();\r\n","import { productApi } from '../gateways/ProductApi';\r\n\r\nexport const REQUEST_PRODUCTS = 'REQUEST_PRODUCTS';\r\nexport const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS';\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\r\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\r\n\r\nconst requestProducts = () => ({\r\n  type: REQUEST_PRODUCTS,\r\n});\r\n\r\nconst receiveProducts = (json) => ({\r\n  type: RECEIVE_PRODUCTS,\r\n  products: json.map(product => product),\r\n});\r\n\r\nexport const fetchProducts = () => dispatch => {\r\n  dispatch(requestProducts());\r\n  const json = productApi.getProducts();\r\n  dispatch(receiveProducts(json));\r\n};\r\n\r\nexport const addProduct = (obj) => ({\r\n  type: ADD_PRODUCT,\r\n  product: obj,\r\n});\r\n\r\nexport const deleteProduct = (id) => ({\r\n  type: DELETE_PRODUCT,\r\n  id: id,\r\n});\r\n\r\nexport const updateProduct = (obj) => ({\r\n  type: UPDATE_PRODUCT,\r\n  product: obj,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { categories } from './categories';\r\nimport { products } from './products';\r\n\r\nexport default combineReducers({\r\n  categories,\r\n  products,\r\n});\r\n","import * as productsActions from '../actions/products';\r\n\r\nexport function products(state = [], action) {\r\n  switch (action.type) {\r\n    case productsActions.RECEIVE_PRODUCTS:\r\n      if (state.length === 0) {\r\n        return [\r\n          ...action.products,\r\n        ];\r\n      } return state\r\n    case productsActions.ADD_PRODUCT:\r\n      return [\r\n        ...state,\r\n        action.product,\r\n      ];\r\n    case productsActions.DELETE_PRODUCT:\r\n      const productIndex = state.findIndex(product => product.id === action.id);\r\n      return [\r\n        ...state.slice(0, productIndex),\r\n        ...state.slice(productIndex + 1)\r\n      ];\r\n    case productsActions.UPDATE_PRODUCT:\r\n      const index = state.findIndex(product => product.id === action.product.id);\r\n      return [\r\n        ...state.slice(0, index),\r\n        action.product,\r\n        ...state.slice(index + 1)\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Main = ({ children }) => (<div>{children}</div>);\r\n\r\nMain.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Main;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({ name }) => (\r\n  <Fragment>\r\n    <h2 className=\"h3\">{name}</h2>\r\n    <hr/>\r\n  </Fragment>\r\n);\r\n\r\nHeader.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { Card, CardText, CardBody, CardTitle, ListGroup, ListGroupItem, Button, Col, Row } from 'reactstrap';\r\nimport moment from 'moment'\r\n\r\nconst shortDateFormat = 'MM/DD/YYYY';\r\nconst longDateFormat = 'MM/DD/YYYY hh:mm a';\r\n\r\nconst Product = ({ product, deleteProduct }) => {\r\n  const receiptDate = product.receiptDate ? moment(product.receiptDate).format(shortDateFormat) : '-';\r\n  const expirationDate = product.expirationDate ? moment(product.expirationDate).format(shortDateFormat) : '-';\r\n  const createdAt = product.createdAt ? moment(product.createdAt).format(longDateFormat) : '-';\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle>{product.name}</CardTitle>\r\n        <CardText tag=\"div\">\r\n          <ListGroup>\r\n            <ListGroupItem>Brand: {product.brand}</ListGroupItem>\r\n            <ListGroupItem>Rating: {product.rating}</ListGroupItem>\r\n            <ListGroupItem>Featured: {product.featured ? 'Yes' : 'No'}</ListGroupItem>\r\n            <ListGroupItem>Items In Stock: {product.itemsInStock}</ListGroupItem>\r\n            <ListGroupItem>\r\n              Categories:\r\n              <ul>\r\n                {product.categories.map(category => (\r\n                  <li key={category.id}>{category.name}</li>\r\n                ))}\r\n              </ul>\r\n            </ListGroupItem>\r\n            <ListGroupItem>Receipt Date: {receiptDate}</ListGroupItem>\r\n            <ListGroupItem>Expiration Date: {expirationDate}</ListGroupItem>\r\n            <ListGroupItem>Created At: {createdAt}</ListGroupItem>\r\n          </ListGroup>\r\n        </CardText>\r\n        <Row>\r\n          <Col sm={{ size: 4,  order: 2, offset: 1}}>\r\n            <Button onClick={() => { deleteProduct(product.id) }}>\r\n              Delete\r\n            </Button>\r\n          </Col>\r\n          <Col sm={{ size: 4,  order: 2, offset: 1}}>\r\n            <Link to={{\r\n              pathname: \"/update\",\r\n              state: {\r\n                productForUpdate: product\r\n              }\r\n            }}>\r\n              <Button>Update</Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nProduct.propTypes = {\r\n  product: PropTypes.object.isRequired,\r\n  deleteProduct: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Product from './Product';\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport { chunk } from 'lodash'\r\n\r\nconst ProductList = ({ products, deleteProduct }) => {\r\n  const productsGroups = chunk(products, 3)\r\n\r\n  return (\r\n    <Container>\r\n      {productsGroups.map((productsGroup, index) => (\r\n        <Row key={index} className=\"mb-5\">\r\n          {productsGroup.map(product => (\r\n            <Col sm=\"4\" key={product.id} >\r\n              <Product \r\n                product={product} \r\n                deleteProduct={deleteProduct}\r\n                />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nProductList.propTypes = {\r\n  products: PropTypes.array.isRequired,\r\n  deleteProduct: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ProductList;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Header from '../Header/Header';\r\nimport ProductsList from './ProductsList';\r\nimport { fetchCategories } from '../../actions/categories';\r\nimport { fetchProducts, deleteProduct } from '../../actions/products';\r\nimport { getCategoriesById } from '../../reducers/categories';\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\n\r\nclass ProductsContainer extends Component {\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n\r\n    dispatch(fetchCategories());\r\n    dispatch(fetchProducts());\r\n  }\r\n\r\n  render() {\r\n    const { products, dispatch } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Header name=\"Products\" />\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Link to=\"/create\"><Button>Create Product</Button></Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <ProductsList\r\n          products={products}\r\n          deleteProduct={(id) => dispatch(deleteProduct(id))}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nProductsContainer.propTypes = {\r\n  products: PropTypes.array.isRequired,\r\n  dispatch: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const categoriesById = getCategoriesById(state);\r\n\r\n  const products = state.products.map(product => {\r\n    const categories = product.categories.map(id => categoriesById[id])\r\n\r\n    return {\r\n      ...product,\r\n      categories\r\n    };\r\n  });\r\n\r\n  return {\r\n    products,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProductsContainer);\r\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Form, FormGroup, Label, Input, FormFeedback } from 'reactstrap';\nimport moment from 'moment'\n\n\nconst ProductForm = ({ addProduct, newId, categoriesById, updateProduct, productForUpdate }) => {\n    const [name, setName] = useState(productForUpdate ? productForUpdate.name : '')\n    const [brand, setBrand] = useState(productForUpdate ? productForUpdate.brand : '')\n    const [rating, setRating] = useState(productForUpdate ? productForUpdate.rating : '')\n    const [itemsInStock, setItemsInStock] = useState(productForUpdate ? productForUpdate.itemsInStock : 0)\n    const [receiptDate, setReceiptDate] = useState(\n        productForUpdate && productForUpdate.receiptDate ?\n            productForUpdate.receiptDate : '')\n    const [categories, setCategories] = useState(productForUpdate ? productForUpdate.categories.map(obj => obj.id) : [])\n    const [expirationDate, setExpirationDate] = useState(\n        productForUpdate && productForUpdate.expirationDate ?\n            productForUpdate.expirationDate : '')\n\n    const validate = {\n        name: () => name.length > 0 && name.length < 200 ? true : false,\n        expirationDate: () => {\n            if (expirationDate) {\n                const selectedDate = moment(expirationDate);\n                const now = moment();\n                if (selectedDate.diff(now, 'days') > 30) { return true }\n                else { return false }\n            } else {\n                return true\n            }\n        },\n        categories: () => categories.length >= 1 && categories.length <= 5 ? true : false\n    }\n\n    return (\n        <Form>\n            <Row form>\n                <Col md={6}>\n                    <FormGroup>\n                        <Label for=\"productName\">Product Name</Label>\n                        <Input\n                            invalid={!validate.name()}\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"productName\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                        <FormFeedback>Product name length must be between 0 and 200</FormFeedback>\n                    </FormGroup>\n                </Col>\n                <Col md={6}>\n                    <FormGroup>\n                        <Label for=\"brandName\">Brand</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"brand\"\n                            id=\"brandtName\"\n                            value={brand}\n                            onChange={(e) => setBrand(e.target.value)}\n                        />\n                    </FormGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={2}>\n                    <FormGroup>\n                        <Label for=\"productRating\">Rating</Label>\n                        <Input\n                            value={rating}\n                            onChange={(e) => setRating(e.target.value)}\n                            type=\"select\"\n                            name=\"select\"\n                            id=\"productRating\"\n                        >\n                            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(\n                                (num) => <option key={num}>{num}</option>)\n                            }\n                        </Input>\n                        <FormFeedback>Rating is required</FormFeedback>\n                    </FormGroup>\n                </Col>\n                <Col md={4}>\n                    <FormGroup>\n                        <Label for=\"itemsInStock\">Items in Stock</Label>\n                        <Input\n                            value={itemsInStock}\n                            onChange={(e) => setItemsInStock(e.target.value)}\n                            type=\"number\"\n                            name=\"itemsInStock\"\n                            id=\"itemsInStock\"\n                            placeholder=\"number\"\n                        />\n                    </FormGroup>\n                </Col>\n                <Col md={4}>\n                    <FormGroup>\n                        <Label for=\"productCategories\">Categories</Label>\n                        <Input\n                            invalid={!validate.categories()}\n                            value={categories.map((id, index) => categoriesById[id].name)}\n                            onChange={(e) => {\n                                let options = e.target.options;\n                                var newCategories = [];\n                                for (let i in options) {\n                                    if (options[i].selected) {\n                                        newCategories.push(parseInt(options[i].id));\n                                    }\n                                }\n                                setCategories(newCategories)\n                            }}\n                            type=\"select\"\n                            name=\"selectMulti\"\n                            id=\"productCategories\"\n                            multiple\n                        >\n                            {Object.keys(categoriesById).map((key) => {\n                                const categoryName = categoriesById[key].name\n                                const categoryId = categoriesById[key].id\n                                return <option\n                                    id={categoryId}\n                                    key={categoriesById[key].id}\n                                >{categoryName}</option>\n                            })}\n                        </Input>\n                        <FormFeedback>product should have from 1 to 5 categories</FormFeedback>\n                    </FormGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={4}>\n                    <FormGroup>\n                        <Label for=\"expirationDate\">Expiration Date</Label>\n                        <Input\n                            invalid={!validate.expirationDate()}\n                            value={expirationDate}\n                            type=\"date\"\n                            name=\"date\"\n                            id=\"expirationDate\"\n                            placeholder=\"date placeholder\"\n                            onChange={(e) => setExpirationDate(e.target.value)}\n                        />\n                        <FormFeedback>product should expire not less than 30 days since now</FormFeedback>\n                    </FormGroup>\n                </Col>\n                <Col md={4}>\n                    <FormGroup>\n                        <Label for=\"receiptDate\">ReceiptDate Date</Label>\n                        <Input\n                            value={receiptDate}\n                            type=\"date\"\n                            name=\"date\"\n                            id=\"receiptDate\"\n                            placeholder=\"date placeholder\"\n                            onChange={(e) => setReceiptDate(e.target.value)}\n                        />\n                    </FormGroup>\n                </Col>\n            </Row>\n            <Link to='/'>\n                {productForUpdate ?\n                    <Button\n                        disabled={Object.keys(validate).some(field => !validate[field]())}\n                        onClick={(e) => {\n                            updateProduct(\n                                {\n                                    id: productForUpdate.id,\n                                    name,\n                                    rating,\n                                    featured: (() => rating > 8 ? true : false)(),\n                                    itemsInStock,\n                                    receiptDate: (() => receiptDate ?\n                                        moment(receiptDate).format('YYYY-MM-DD') : null)(),\n                                    brand,\n                                    categories,\n                                    expirationDate: (() => expirationDate ?\n                                        moment(expirationDate).format('YYYY-MM-DD') : null)(),\n                                    createdAt: productForUpdate.createdAt,\n                                }\n                            )\n                        }}\n                    >\n                        Update Product\n                    </Button>\n                    :\n                    <Button\n                        disabled={Object.keys(validate).some(field => !validate[field]())}\n                        onClick={(e) => {\n                            addProduct(\n                                {\n                                    id: newId,\n                                    name,\n                                    rating,\n                                    featured: (() => rating > 8 ? true : false)(),\n                                    itemsInStock,\n                                    receiptDate: (() => receiptDate ?\n                                        moment(receiptDate).format('YYYY-MM-DD') : null)(),\n                                    brand,\n                                    categories,\n                                    expirationDate: (() => expirationDate ?\n                                        moment(expirationDate).format('YYYY-MM-DD') : null)(),\n                                    createdAt: moment().format(),\n                                }\n                            )\n                        }}\n                    >\n                        Add Product\n                    </Button>\n                }\n            </Link>\n        </Form>\n    );\n}\n\nProductForm.propTypes = {\n    newId: PropTypes.number,\n    categoriesById: PropTypes.object.isRequired,\n    addProduct: PropTypes.func,\n    updateProduct: PropTypes.func,\n    productForUpdate: PropTypes.object,\n};\n\nexport default ProductForm;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Header from '../Header/Header';\r\nimport ProductForm from './ProductForm';\r\nimport { addProduct, updateProduct } from '../../actions/products'\r\nimport { getCategoriesById } from '../../reducers/categories';\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\n\r\n\r\nclass ProductFormContainer extends Component {\r\n\r\n  render() {\r\n    const { products, categoriesById, addProduct, updateProduct } = this.props;\r\n    let productForUpdate = null\r\n    if (this.props.location &&\r\n      this.props.location.state &&\r\n      this.props.location.state.productForUpdate\r\n    ) { productForUpdate = this.props.location.state.productForUpdate }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              {productForUpdate ? <Header name=\"Update Product\" /> : <Header name=\"Add Product\" />}\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Link to=\"/\"><Button>Back to Products</Button></Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        {productForUpdate ?\r\n          <ProductForm categoriesById={categoriesById} updateProduct={updateProduct} productForUpdate={productForUpdate} /> :\r\n          <ProductForm categoriesById={categoriesById} addProduct={addProduct} newId={products[products.length - 1].id + 1} />\r\n        }\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nProductFormContainer.propTypes = {\r\n  products: PropTypes.array.isRequired,\r\n  categoriesById: PropTypes.object.isRequired,\r\n  addProduct: PropTypes.func,\r\n  updateProduct: PropTypes.func,\r\n  productForUpdate: PropTypes.object,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addProduct: (obj) => dispatch(addProduct(obj)),\r\n    updateProduct: (obj) => dispatch(updateProduct(obj)),\r\n\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  const products = state.products\r\n  const categoriesById = getCategoriesById(state);\r\n\r\n  return {\r\n    products,\r\n    categoriesById\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductFormContainer);\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (<h1>Not Found</h1>);\r\n\r\nexport default NotFound;\r\n","import React from 'react'\r\nimport { HashRouter, Switch, Route } from 'react-router-dom'\r\nimport Main from './components/Main/Main'\r\nimport ProductsContainer from './components/Products/ProductsContainer'\r\nimport ProductFormContainer from './components/Forms/ProductFormContainer'\r\nimport NotFound from './components/NotFound/NotFound'\r\n\r\nexport function getRoutes() {\r\n  return (\r\n    <HashRouter>\r\n      <Main>\r\n        <Switch>\r\n          {/* <Route\r\n            exact\r\n            path=\"/update\"\r\n            render={(props) => <ProductFormContainer {...props} isAuthed={true} />}\r\n          /> */}\r\n          <Route exact path=\"/update\" component={ProductFormContainer} />,\r\n          <Route exact path=\"/create\" component={ProductFormContainer} />,\r\n          <Route exact path=\"/\" component={ProductsContainer} />,\r\n          <Route path=\"*\" component={NotFound}/>,\r\n        </Switch>\r\n      </Main>\r\n    </HashRouter >\r\n  )\r\n}\r\n\r\nexport default getRoutes\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducers from './reducers';\r\nimport getRoutes from './routes'\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <div className=\"content\">\r\n    <div className=\"container\">\r\n      <Provider store={store}>\r\n        {getRoutes()}\r\n      </Provider>\r\n    </div>\r\n  </div>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}